package lesson14_ОбзорСредствРазработки;

// Юпитер потому что версия библиотеки 5. Пятая планета от земли.
// Gradle и Maven - средства сборки и управления зависимостями. Lada Vesta и Kia Rio. Gradle - лучше. Maven - проще.
// junit и Mockito - средства тестирования
// Docker и Kubernetes - средства запуска. развертка приложения. Код надо написать, код надо отревьювить, код надо проверить на баги, код надо замержить в мастер, и только тогда можно собрать его из мастера и выложить.
// Покрытие кода тестами есть либо нулевое, либо 100 процентное.
// Написал код - напиши тест, неотходя от кассы.
public class Calculator {

    //*****************************//

    // Предположим батарейка это класс, который будет ходить в базу данных, сторонний сервис, кароче делать какую то работу, которая в контексте калькулятора нас не сильно интересует.
    private Battery battery;

    public Calculator() {
        battery = new Battery(100);
    }

    public Calculator(Battery battery) {
        this.battery = battery;
    }

    //*****************************//

    public int sum(int a, int b) {
        return a + b;
    }

    public int multiply(int a, int b) {
        try {
            Thread.sleep(200);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        return a * b;
    }

    // Если какая то сложная логика. История: есть человек, который хочет купить путевку в путешествие (Чехия). Едут чтобы погулять по экскурсиям. Пользователь говорит я хочу сюда сюда и сюда. Вибирает себе несколько экскурский, которые он хочет посетить. Программа должна взять его экскурсии, взять рассписание, в какие дни эти эксурсии проходят и посчитать минимальное количество ночей, на которые турист должен приехать.

    public int division(int a, int b) {
        if (b == 0) return 0;
        return a / b;
    }


}
